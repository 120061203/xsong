---
import { Image } from 'astro:assets';
import { getCollection } from 'astro:content';
import BaseHead from '../../components/BaseHead.astro';
import Footer from '../../components/Footer.astro';
import FormattedDate from '../../components/FormattedDate.astro';
import Header from '../../components/Header.astro';
import { SITE_DESCRIPTION, SITE_TITLE } from '../../consts';

// 獲取所有文章，過濾掉私有文章
const allPosts = await getCollection('blog');
// 調試信息已移除

const posts = allPosts
	.filter(post => {
		// 檢查 frontmatter 原始內容
		const frontmatter = post.body.split('---')[1];
		const privateFlag = 'private: true';
		const hasPrivateTrue = frontmatter && frontmatter.includes(privateFlag);
		
		// 過濾掉私有文章
		if (hasPrivateTrue) {
			return false;
		}
		return true;
	})
	.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

// 調試信息已移除

// 為每個文章添加 frontmatter 數據
const postsWithFrontmatter = await Promise.all(
	posts.map(async (post) => {
		const { render } = await import('astro:content');
		const { Content } = await render(post);
		return {
			...post,
			frontmatter: post.rendered?.metadata?.frontmatter || {}
		};
	})
);

// 計算閱讀時間的函數
function getReadingTime(content: string): number {
	const wordsPerMinute = 250;
	// 移除 Markdown 語法，計算中文字數
	const cleanContent = content.replace(/[#*\`\[\]()]/g, '').replace(/---/g, '');
	const words = cleanContent.length;
	return Math.ceil(words / wordsPerMinute);
}
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
		<style>
			main {
				width: 960px;
			}
			ul {
				display: flex;
				flex-wrap: wrap;
				gap: 2rem;
				list-style-type: none;
				margin: 0;
				padding: 0;
			}
			ul li {
				width: calc(50% - 1rem);
			}
			ul li * {
				text-decoration: none;
				transition: 0.2s ease;
			}
			ul li:first-child {
				width: 100%;
				margin-bottom: 1rem;
				text-align: center;
			}
			ul li:first-child img {
				width: 100%;
				height: 500px;
				object-fit: cover;
				object-position: center;
				display: block;
				margin: 0;
				padding: 0;
				flex-shrink: 0;
			}
			ul li:first-child .title {
				font-size: 2.369rem;
			}
			ul li img {
				margin: 0;
				padding: 0;
				border-radius: 12px;
				width: 100%;
				height: 400px;
				object-fit: cover;
				object-position: center;
				display: block;
				flex-shrink: 0;
			}
			ul li a {
				display: flex;
				flex-direction: column;
				padding: 0;
				border-radius: 16px;
				background: rgba(255, 255, 255, 0.05);
				border: 1px solid rgba(255, 255, 255, 0.1);
				transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
				cursor: pointer;
				position: relative;
				overflow: hidden;
				height: 100%;
				box-sizing: border-box;
			}
			ul li a::before {
				content: '';
				position: absolute;
				top: 0;
				left: 0;
				right: 0;
				bottom: 0;
				background: linear-gradient(135deg, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0.05) 100%);
				opacity: 0;
				transition: opacity 0.3s ease;
			}
			ul li a:hover {
				background: rgba(255, 255, 255, 0.08);
				border-color: rgba(255, 255, 255, 0.2);
				transform: translateY(-4px);
				box-shadow: 0 12px 40px rgba(0, 0, 0, 0.4);
			}
			ul li a:hover::before {
				opacity: 1;
			}
			.title {
				margin: 0;
				padding: 1.5rem 1.5rem 0.5rem 1.5rem;
				color: rgb(var(--black));
				line-height: 1.2;
				font-weight: 600;
				position: relative;
				z-index: 1;
			}
			.meta {
				display: flex;
				align-items: center;
				gap: 1rem;
				margin: 0;
				padding: 0 1.5rem;
				font-size: 0.85em;
				color: rgb(var(--gray));
				position: relative;
				z-index: 1;
			}
			.date {
				margin: 0;
				color: rgb(var(--gray));
				font-size: 0.9em;
				position: relative;
				z-index: 1;
			}
			.excerpt {
				margin: 0;
				padding: 0.75rem 1.5rem 0 1.5rem;
				color: rgb(var(--gray));
				font-size: 0.9em;
				line-height: 1.5;
				position: relative;
				z-index: 1;
				display: -webkit-box;
				-webkit-line-clamp: 3;
				-webkit-box-orient: vertical;
				overflow: hidden;
			}
			.read-more {
				margin: 0;
				padding: 1rem 1.5rem 1.5rem 1.5rem;
				color: rgb(var(--accent));
				font-weight: 500;
				font-size: 0.9em;
				position: relative;
				z-index: 1;
			}
			ul li a:hover h4,
			ul li a:hover .date,
			ul li a:hover .excerpt {
				color: rgb(var(--accent));
			}
			ul a:hover img {
				box-shadow: var(--box-shadow);
				transform: scale(1.02);
			}
			@media (max-width: 720px) {
				ul {
					gap: 1rem;
				}
				ul li {
					width: 100%;
					text-align: center;
				}
				ul li:first-child {
					margin-bottom: 0;
				}
				ul li:first-child img {
					height: 350px;
				}
				ul li:first-child .title {
					font-size: 1.563em;
				}
				ul li img {
					height: 300px;
				}
				ul li a {
					padding: 0;
				}
				.title {
					padding: 1rem 1rem 0.5rem 1rem;
				}
				.meta {
					padding: 0 1rem;
				}
				.excerpt {
					padding: 0.75rem 1rem 0 1rem;
				}
				.read-more {
					padding: 1rem 1rem 1rem 1rem;
				}
				.meta {
					justify-content: center;
					flex-wrap: wrap;
					gap: 0.5rem;
				}
			}
		</style>
	</head>
	<body>
		<Header />
		<main>
			<section>
				<div style="text-align: center; margin-bottom: 2rem;">
					<a href="/blog/infinite/" style="
						background: var(--accent);
						color: white;
						padding: 1rem 2rem;
						border-radius: 8px;
						text-decoration: none;
						font-weight: 500;
						display: inline-block;
						transition: all 0.3s ease;
					">
						🔄 無限滾動模式
					</a>
					<p style="margin-top: 0.5rem; color: rgb(var(--gray)); font-size: 0.9rem;">
						體驗如社交媒體般的流暢閱讀
					</p>
				</div>
				<ul>
					{
						postsWithFrontmatter.map((post) => {
							const readingTime = getReadingTime(post.body);
							return (
								<li>
									<a href={`/blog/${post.id}/`}>
										{post.data.heroImage && (
											<Image width={720} height={450} src={post.data.heroImage} alt="" />
										)}
										<h4 class="title">{post.data.title}</h4>
										<div class="meta">
											<span class="date">
												<FormattedDate date={post.data.pubDate} />
											</span>
											<span>•</span>
											<span>{readingTime} 分鐘</span>
											{post.frontmatter.categories && post.frontmatter.categories.length > 0 && (
												<>
													<span>•</span>
													<span>{post.frontmatter.categories[0]}</span>
												</>
											)}
										</div>
										{post.data.description && (
											<p class="excerpt">{post.data.description}</p>
										)}
										<div class="read-more">閱讀更多 →</div>
									</a>
								</li>
							);
						})
					}
				</ul>
			</section>
		</main>
		<Footer />
	</body>
</html>
