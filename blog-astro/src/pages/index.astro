---
import Layout from '../layouts/Layout.astro';
import { getCollection } from 'astro:content';

// 獲取所有文章
const posts = await getCollection('blog').then(posts => 
	posts.sort((a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime())
);

// 提取所有分類和標籤
const categories = [...new Set(posts.flatMap(post => post.data.categories || []))];
const tags = [...new Set(posts.flatMap(post => post.data.tags || []))];

// 計算閱讀時間（假設每分鐘 250 字）
function calculateReadingTime(content: string) {
	const wordsPerMinute = 250;
	// 移除 Markdown 語法，計算中文字數
	const cleanContent = content.replace(/[#*\`\[\]()]/g, '').replace(/---/g, '');
	const words = cleanContent.length;
	return Math.ceil(words / wordsPerMinute);
}
---

<Layout title="Blog - xsong.us">
	<div class="min-h-screen bg-gray-50 dark:bg-gray-900">
		<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
			<!-- Header -->
			<div class="text-center mb-12">
				<h1 class="text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-4">
					Blog
				</h1>
				<p class="text-xl text-gray-600 dark:text-gray-400">
					分享技術的大小事，以及演講和課程內容
				</p>
			</div>

			<div class="flex flex-col lg:flex-row gap-8">
				<!-- 左側分類導航 -->
				<div class="lg:w-1/4">
					<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 sticky top-8">
						<!-- 搜尋框 -->
						<div class="mb-6">
							<div class="relative">
								<input 
									type="text" 
									id="search-input"
									placeholder="搜尋文章..." 
									class="w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:ring-2 focus:ring-blue-500 dark:focus:ring-green-400 focus:border-transparent"
								>
								<svg class="absolute right-3 top-2.5 w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
								</svg>
							</div>
						</div>

						<!-- 分類 -->
						<div class="mb-6">
							<h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-3">分類</h3>
							<div class="space-y-2">
								<button 
									class="category-filter w-full text-left px-3 py-2 rounded-lg text-gray-700 dark:text-gray-300 hover:bg-blue-50 dark:hover:bg-green-900/20 transition-colors"
									data-category="all"
								>
									全部 ({posts.length})
								</button>
								{categories.map(category => (
									<button 
										class="category-filter w-full text-left px-3 py-2 rounded-lg text-gray-700 dark:text-gray-300 hover:bg-blue-50 dark:hover:bg-green-900/20 transition-colors"
										data-category={category}
									>
										{category} ({posts.filter(post => post.data.categories?.includes(category)).length})
									</button>
								))}
							</div>
						</div>

						<!-- 標籤 -->
						<div class="mb-6">
							<h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-3">標籤</h3>
							<div class="flex flex-wrap gap-2">
								{tags.map(tag => (
									<button 
										class="tag-filter px-3 py-1 text-sm bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-full hover:bg-blue-100 dark:hover:bg-green-900/20 transition-colors"
										data-tag={tag}
									>
										{tag}
									</button>
								))}
							</div>
						</div>
					</div>
				</div>

				<!-- 右側文章列表 -->
				<div class="lg:w-3/4">
					<div class="space-y-6">
						{posts.map(post => {
							const slug = post.id.replace(/\.(md|mdx)$/, '');
							const readingTime = calculateReadingTime(post.body);
							return (
								<a href={`/blog/${slug}`} class="block">
									<article class="blog-post bg-white dark:bg-gray-800 rounded-xl shadow-lg overflow-hidden border border-gray-200 dark:border-gray-700 hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1 cursor-pointer group">
										<div class="flex flex-col md:flex-row">
											{/* 文章封面圖 */}
											{post.data.heroImage && (
												<div class="md:w-1/3">
													<img 
														src={post.data.heroImage} 
														alt={post.data.title}
														class="w-full h-48 md:h-full object-cover group-hover:scale-105 transition-transform duration-300"
													>
												</div>
											)}
											
											{/* 文章內容 */}
											<div class="md:w-2/3 p-6">
												<div class="flex items-center justify-between mb-3">
													<span class="text-sm text-gray-500 dark:text-gray-400">
														{post.data.pubDate.toLocaleDateString('zh-TW', {
															year: 'numeric',
															month: 'long',
															day: 'numeric'
														})}
													</span>
													<div class="flex items-center text-sm text-gray-500 dark:text-gray-400">
														<span>{readingTime} 分鐘</span>
														<span class="mx-2">•</span>
														<span>{post.body.replace(/[#*\`\[\]()]/g, '').replace(/---/g, '').length} 字</span>
													</div>
												</div>
												
												<h2 class="text-xl font-bold text-gray-900 dark:text-white mb-3 group-hover:text-blue-600 dark:group-hover:text-green-400 transition-colors">
													{post.data.title}
												</h2>
												
												<p class="text-gray-600 dark:text-gray-300 mb-4 line-clamp-3">
													{post.data.description}
												</p>
												
												{/* 分類和標籤 */}
												<div class="flex flex-wrap items-center gap-2 mb-4">
													{post.data.categories?.map(category => (
														<span class="text-xs bg-blue-100 dark:bg-blue-900/20 text-blue-800 dark:text-blue-300 px-2 py-1 rounded">
															{category}
														</span>
													))}
													{post.data.tags?.map(tag => (
														<span class="text-xs bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-400 px-2 py-1 rounded">
															{tag}
														</span>
													))}
												</div>
												
												<div class="inline-flex items-center text-blue-600 dark:text-green-400 group-hover:text-blue-700 dark:group-hover:text-green-300 font-medium transition-colors">
													閱讀更多
													<svg class="ml-2 w-4 h-4 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
														<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
													</svg>
												</div>
											</div>
										</div>
									</article>
								</a>
							);
						})}
					</div>
				</div>
			</div>
		</div>
	</div>

	<script>
		// 搜尋功能
		const searchInput = document.getElementById('search-input');
		const blogPosts = document.querySelectorAll('.blog-post');
		const categoryFilters = document.querySelectorAll('.category-filter');
		const tagFilters = document.querySelectorAll('.tag-filter');
		
		let currentCategory = 'all';
		let currentTags = [];
		
		// 搜尋功能
		searchInput.addEventListener('input', (e) => {
			const searchTerm = e.target.value.toLowerCase();
			filterPosts();
		});
		
		// 分類篩選
		categoryFilters.forEach(filter => {
			filter.addEventListener('click', (e) => {
				// 移除所有活動狀態
				categoryFilters.forEach(f => f.classList.remove('bg-blue-100', 'dark:bg-green-900/20', 'text-blue-800', 'dark:text-green-300'));
				
				// 添加活動狀態到當前按鈕
				e.target.classList.add('bg-blue-100', 'dark:bg-green-900/20', 'text-blue-800', 'dark:text-green-300');
				
				currentCategory = e.target.dataset.category;
				filterPosts();
			});
		});
		
		// 標籤篩選
		tagFilters.forEach(filter => {
			filter.addEventListener('click', (e) => {
				const tag = e.target.dataset.tag;
				const isActive = e.target.classList.contains('bg-blue-100', 'dark:bg-green-900/20');
				
				if (isActive) {
					e.target.classList.remove('bg-blue-100', 'dark:bg-green-900/20', 'text-blue-800', 'dark:text-green-300');
					currentTags = currentTags.filter(t => t !== tag);
				} else {
					e.target.classList.add('bg-blue-100', 'dark:bg-green-900/20', 'text-blue-800', 'dark:text-green-300');
					currentTags.push(tag);
				}
				
				filterPosts();
			});
		});
		
		function filterPosts() {
			const searchTerm = searchInput.value.toLowerCase();
			
			blogPosts.forEach(post => {
				const title = post.querySelector('h2').textContent.toLowerCase();
				const description = post.querySelector('p').textContent.toLowerCase();
				const categories = Array.from(post.querySelectorAll('.text-xs')).map(tag => tag.textContent.toLowerCase());
				
				const matchesSearch = title.includes(searchTerm) || description.includes(searchTerm);
				const matchesCategory = currentCategory === 'all' || categories.includes(currentCategory.toLowerCase());
				const matchesTags = currentTags.length === 0 || currentTags.some(tag => categories.includes(tag.toLowerCase()));
				
				if (matchesSearch && matchesCategory && matchesTags) {
					post.closest('a').style.display = 'block';
				} else {
					post.closest('a').style.display = 'none';
				}
			});
		}
		
		// 初始化：設置"全部"為活動狀態
		document.querySelector('[data-category="all"]').classList.add('bg-blue-100', 'dark:bg-green-900/20', 'text-blue-800', 'dark:text-green-300');
	</script>
</Layout>
